{
    "info": {
        "title": "Crisis Containment Service App",
        "description": "This is a sample server for persons reported in emergency situations.",
        "contact": {
            "name": "CriC Support",
            "url": "https://github.com/tudorgabriel24/CriCprojectTW.git",
            "email": "support@cric.com"
        },
        "version": "1.0"
    },
    "schemes": [
        "http"
    ],
    "basePath": "/persons",
    "paths": {
        "/getAll": {
            "get": {
                "summary": "Reported persons",
                "description": "The getAll endpoint returns all reported users in the application with their data.",
                "parameters": "",
                "responses": {
                    "200": {
                        "description": "An array of persons",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/models/Person"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "type": "Validation object"
                        }
                    }
                }
            }
        },
        "/create": {
            "post": {
                "summary": "Create persons",
                "description": "The create endpoint adds a person in the application with the data provided in the request",
                "parameters": [
                    {
                        "name": "firstname",
                        "type": "String",
                        "required": "true",
                        "max": 25
                    },
                    {
                        "name": "lastname",
                        "type": "String",
                        "required": "true",
                        "max": 25
                    },
                    {
                        "name": "situation",
                        "type": "String",
                        "required": "true",
                        "max": 25
                    },
                    {
                        "name": "latitude",
                        "type": "Number",
                        "required": "true"
                    },
                    {
                        "name": "longitude",
                        "type": "Number",
                        "required": "true"
                    },
                    {
                        "name": "description",
                        "type": "String",
                        "required": "false",
                        "max": 200
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Person added successfuly",
                        "type": "String"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "type": "Validation object"
                        }
                    }
                }
            }
        },
        "/:id": {
            "get": {
                "summary": "Showing a person",
                "description": "Returning a person with the requested id",
                "parameters": [
                    {
                        "name": "id",
                        "type": "String",
                        "required": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/models/Person"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "type": "Validation object"
                        }
                    }
                }
            }
        },
        "/:id/update": {
            "put": {
                "summary": "Editing a person",
                "description": "Updating the information about a person",
                "parameters": [
                    {
                        "name": "firstname",
                        "type": "String",
                        "required": "false",
                        "max": 25
                    },
                    {
                        "name": "lastname",
                        "type": "String",
                        "required": "false",
                        "max": 25
                    },
                    {
                        "name": "situation",
                        "type": "String",
                        "required": "false",
                        "max": 25
                    },
                    {
                        "name": "latitude",
                        "type": "Number",
                        "required": "false"
                    },
                    {
                        "name": "longitude",
                        "type": "Number",
                        "required": "false"
                    },
                    {
                        "name": "description",
                        "type": "String",
                        "required": "false",
                        "max": 200
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object",
                        "type": "String"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "type": "Validation object"
                        }
                    }
                }
            }
        },
        "/:id/delete": {
            "delete": {
                "summary": "Deleting a person",
                "description": "Deleting the information about a person",
                "parameters": [
                    {
                        "name": "id",
                        "type": "String",
                        "required": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfuly",
                        "type": "String"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "type": "Validation object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Person": {
            "properties": {
                "firstname": {
                    "type": "String",
                    "description": "First name of the reported person."
                },
                "lastname": {
                    "type": "String",
                    "description": "Last name of the reported person."
                },
                "situation": {
                    "type": "String",
                    "description": "The status of the person and it could be: 'alive','dead','not found'."
                },
                "latitude": {
                    "type": "Number",
                    "description": "Geographic coordinates of the position of the reported person"
                },
                "longitude": {
                    "type": "Number",
                    "description": "Geographic coordinates of the position of the reported person"
                },
                "description": {
                    "type": "String",
                    "description": "Details regarding the situation "
                }
            }
        }
    }
}